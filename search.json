[{"path":[]},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement marion.louveaux@opendatasoft.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Opendatasoft Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"get_body_and_style","dir":"Articles","previous_headings":"","what":"get_body_and_style","title":"Get started","text":"get_body_and_style() renders Rmarkdown file .html file extracts html nodes corresponding body style page. Note include scripts classic page Opendatasoft platform. Hence, scripts nodes removed html document get_body_and_style() interactive libraries {plotly} {highcharter} don’t work .","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to = dir_tmp) file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to = dir_tmp) # browseURL(dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\")  body_and_style <- get_body_and_style(path, add_extra_css = \"no\")"},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"get_ods_page","dir":"Articles","previous_headings":"","what":"get_ods_page","title":"Get started","text":"get_ods_page() gets pre-existing information page, title, description, tags current content. information provided create_json(), elements collected get_ods_page() re-used bycreate_json() create JSON object sent back Opendatasoft platform using put_ods_page() function.","code":"#' \\dontrun{ #' page_slug <- \"odsrmd-example\"  #' page_elements <- get_ods_page(page_slug)  #' }"},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"get_languages","dir":"Articles","previous_headings":"","what":"get_languages","title":"Get started","text":"get_languages() retrieves languages available Opendatasoft platform, information contained page_elements, output get_ods_page(). can use apart check languages available Opendatasoft platform. Otherwise, used inside is_available(). , provide example page_elements illustrate action get_languages().","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/page_elements_example\", package = \"odsrmd\"), to = dir_tmp) page_elements <- readRDS(paste0(dir_tmp, \"/page_elements_example\"))  all_languages <- get_languages(page_elements) #> Languages available on the platform: EN, FR."},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"is_available","dir":"Articles","previous_headings":"","what":"is_available","title":"Get started","text":"is_available() checks given language available ODS platform list languages contained page_elements, output get_ods_page(). can use apart check given language available Opendatasoft platform. Otherwise, used inside create_json(). , provide example page_elements illustrate action is_available().","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/page_elements_example\", package = \"odsrmd\"), to = dir_tmp) page_elements <- readRDS(paste0(dir_tmp, \"/page_elements_example\"))  is_available(\"EN\", page_elements)"},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"create_json","dir":"Articles","previous_headings":"","what":"create_json","title":"Get started","text":"create_json() combines information coming Opendatasoft page (get_ods_page()) Rmarkdown document (get_body_and_style()) JSON object ready sent back Opendatasoft platform. chosen_language parameter, can decide update language versions page. , provide example output get_ods_page(), called page_elements, illustrate action create_json().","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to = dir_tmp) file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) # browseURL(dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\") body_and_style <- get_body_and_style(path, add_extra_css = \"no\")  file.copy(from = system.file(\"examples/page_elements_example\", package = \"odsrmd\"), to = dir_tmp) page_elements <- readRDS(paste0(dir_tmp, \"/page_elements_example\"))  json_to_send <- create_json(page_elements, body_and_style,   chosen_languages = \"all\",   title = NULL, description = NULL,   tags = NULL, restricted = NULL ) #> Languages available on the platform: EN, FR. #> Chosen languages: ALL."},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"put_ods_page","dir":"Articles","previous_headings":"","what":"put_ods_page","title":"Get started","text":"put_ods_page() updates content page Opendatasoft platform JSON object coming create_json(). sends back HTTP response request successful, otherwise throws error.","code":"#' \\dontrun{ #' # Temporary directory for reproducible example #' dir_tmp <- tempfile(pattern = \"proj-\") #' dir.create(dir_tmp) #'  #' file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to=dir_tmp) #' file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) #' # browseURL(dir_tmp) #' path <- paste0(dir_tmp, \"/example_rmd.Rmd\") #' page_slug <- \"odsrmd-example\" #'  #' body_and_style <- get_body_and_style(path) #'  #' page_elements <- get_ods_page(page_slug) #'  #' json_to_send <- create_json(page_elements, body_and_style, chosen_languages = c(\"en\", \"fr\"),  #'                         title = \"English title\", description = NULL,   #'                         tags = NULL, restricted = NULL) #'  #' put_ods_page(page_slug, json_to_send) #' }"},{"path":"https://opendatasoft.github.io/odsrmd/articles/get-started.html","id":"update_ods_page","dir":"Articles","previous_headings":"","what":"update_ods_page","title":"Get started","text":"update_ods_page() --one function fill update ODS page content Rmarkdown file. combines get_body_and_style(), get_ods_page(), create_json() put_ods_page() single command line.","code":"#' \\dontrun{ #' # Temporary directory for reproducible example #' dir_tmp <- tempfile(pattern = \"proj-\") #' dir.create(dir_tmp) #'  #' file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to = dir_tmp) #' file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) #' # browseURL(dir_tmp) #' path <- paste0(dir_tmp, \"/example_rmd.Rmd\") #' page_slug <- \"odsrmd-example\" #'  #' update_ods_page(path, page_slug, add_extra_css = \"no\", chosen_languages = \"all\", title = NULL, #'   description = NULL, tags = NULL, restricted = NULL #' ) #' }"},{"path":"https://opendatasoft.github.io/odsrmd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marion Louveaux. Author, maintainer. . Funder, copyright holder.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Louveaux M (2022). odsrmd: Prepare Send Rmd File ODS Platform. R package version 0.1.0, https://opendatasoft.github.io/odsrmd/.","code":"@Manual{,   title = {odsrmd: Prepare And Send Rmd File On An ODS Platform},   author = {Marion Louveaux},   year = {2022},   note = {R package version 0.1.0},   url = {https://opendatasoft.github.io/odsrmd/}, }"},{"path":"https://opendatasoft.github.io/odsrmd/index.html","id":"odsrmd","dir":"","previous_headings":"","what":"Prepare And Send Rmd File On An ODS Platform","title":"Prepare And Send Rmd File On An ODS Platform","text":"goal {odsrmd} give possibility R users add Rmarkdown files pages Opendatasoft platform. knits Rmarkdown file html, format JSON send via management API Opendatasoft platform. Note include scripts classic page Opendatasoft platform. Interactive libraries {plotly} {highcharter} produce script nodes document knitted html. Hence used Rmarkdown documents intend display page Opendatasoft platform. reasons, {bookdown} {flexdashboard} compatible {odsrmd}.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Prepare And Send Rmd File On An ODS Platform","text":"can install development version {odsrmd} like :","code":"# remotes::install_github(\"odsrmd\")"},{"path":"https://opendatasoft.github.io/odsrmd/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Prepare And Send Rmd File On An ODS Platform","text":"use package, must granted credentials access Opendatasoft platform. credentials stored .Renviron file. Open .Renviron file: Add following environment variables: ODS_DOMAIN_ID, ODS_USERNAME ODS_PASSWORD. ODS_DOMAIN_ID variable corresponds domain ID Opendatasoft domain. ODS_USERNAME ODS_PASSWORD correspond respectively username password access platform. careful display information script add .Renviron file .gitignore file.","code":"usethis::edit_r_environ() usethis::use_git_ignore(ignores = \".Renviron\")"},{"path":"https://opendatasoft.github.io/odsrmd/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Prepare And Send Rmd File On An ODS Platform","text":"minimal example use {odsrmd} package. First, login Opendatasoft platform, go backoffice, create classic page write “odsrmd-example” page URL. , add credentials domain ID .Renviron file. Now run example .","code":"library(odsrmd)  # Create a temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  # Use example Rmd from the {odsrmd} library file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to=dir_tmp) file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\")  # Here the page to modify on the Opendatasoft platform is named \"odsrmd-example\"    page_slug <- \"odsrmd-example\"  # Send elements to the page on the Opendatasoft platform update_ods_page(path, page_slug, add_extra_css = \"no\", chosen_languages = \"all\", title = NULL,   description = NULL, tags = NULL, restricted = NULL )"},{"path":"https://opendatasoft.github.io/odsrmd/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Prepare And Send Rmd File On An ODS Platform","text":"First, suggest try general troubleshooting strategies: - Check added credentials .Renviron file. Check use plain Rmarkdown file ({flexdashboard}, {pagedown}). - Try find specific problem , notably identifying causing problem. - “Unplug plug back ”: restart R, close reopen R. can also submit issue Github question directly related package {odsrmd}. Please indicate version R {odsrmd}, provide minimal version Rmarkdown document like publish page platform. question concerns platform, credentials etc? Please contact Opendatasoft support get touch Customer Success Manager.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Prepare And Send Rmd File On An ODS Platform","text":"Please note {odsrmd} project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/create_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Create JSON element to send to ODS platform. — create_json","title":"Create JSON element to send to ODS platform. — create_json","text":"Combine information coming Opendatasoft page (get_ods_page()) Rmarkdown document (get_body_and_style()) JSON object ready sent back Opendatasoft platform.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/create_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create JSON element to send to ODS platform. — create_json","text":"","code":"create_json(   page_elements,   body_and_style,   title = NULL,   description = NULL,   chosen_languages = \"all\",   tags = NULL,   restricted = NULL )"},{"path":"https://opendatasoft.github.io/odsrmd/reference/create_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create JSON element to send to ODS platform. — create_json","text":"page_elements List object get_page(). Contains title, description, template, language, content, tags level restriction page. default create_json(), value provided title, description, tags restricted, create_json() takes values available page_elements. body_and_style List object containing body style knitted Rmd document coming get_body_and_style(). title character string specifying title page. null, overwrites title page_elements. description character string containing description page. null, overwrites description page_elements. chosen_languages character vector languages page updated. Default \"\", meaning languages available platform. tags list object character strings containing tags describing page. null, overwrites tags page_elements. restricted logical TRUE/FALSE indicating reading status page. TRUE make page \"public\" whereas FALSE keep access restricted users granted permission. null, overwrites reading status page_elements.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/create_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create JSON element to send to ODS platform. — create_json","text":"JSON element","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/create_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create JSON element to send to ODS platform. — create_json","text":"","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to = dir_tmp) #> [1] TRUE file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) #> [1] TRUE # browseURL(dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\") body_and_style <- get_body_and_style(path, add_extra_css = \"no\")  file.copy(from = system.file(\"examples/page_elements_example\", package = \"odsrmd\"), to = dir_tmp) #> [1] TRUE page_elements <- readRDS(paste0(dir_tmp, \"/page_elements_example\"))  json_to_send <- create_json(page_elements, body_and_style,   chosen_languages = \"all\",   title = NULL, description = NULL,   tags = NULL, restricted = NULL ) #> Languages available on the platform: EN, FR. #> Chosen languages: ALL."},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_body_and_style.html","id":null,"dir":"Reference","previous_headings":"","what":"Get body and style — get_body_and_style","title":"Get body and style — get_body_and_style","text":"Render Rmarkdown file html file extract html nodes corresponding body style without script nodes.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_body_and_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get body and style — get_body_and_style","text":"","code":"get_body_and_style(path, add_extra_css = \"no\")"},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_body_and_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get body and style — get_body_and_style","text":"path Path Rmd file. add_extra_css Add css files listed Rmarkdown yaml (output: html_document: css: ...). Default \"\" add extra css files. option \"append\" adds content css file(s) default Rmd style. option \"replace\" replaces default Rmd style content css file(s).","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_body_and_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get body and style — get_body_and_style","text":"named list two elements : body style.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_body_and_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get body and style — get_body_and_style","text":"","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to = dir_tmp) #> [1] TRUE file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to = dir_tmp) #> [1] TRUE # browseURL(dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\")  body_and_style <- get_body_and_style(path, add_extra_css = \"no\")"},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_languages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all languages available on the ODS platform — get_languages","title":"Get all languages available on the ODS platform — get_languages","text":"Retrieve languages available ODS platform information contained page_elements.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_languages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all languages available on the ODS platform — get_languages","text":"","code":"get_languages(page_elements, verbose = TRUE)"},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_languages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all languages available on the ODS platform — get_languages","text":"page_elements List object get_page(). Contains title, description, template, language, content, tags level restriction page. verbose logical TRUE/FALSE indicating function output message listing languages available platform.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_languages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all languages available on the ODS platform — get_languages","text":"vector characters.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_languages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all languages available on the ODS platform — get_languages","text":"","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/page_elements_example\", package = \"odsrmd\"), to = dir_tmp) #> [1] TRUE page_elements <- readRDS(paste0(dir_tmp, \"/page_elements_example\"))  all_languages <- get_languages(page_elements) #> Languages available on the platform: EN, FR."},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_ods_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ODS page — get_ods_page","title":"Get ODS page — get_ods_page","text":"Get content classic page Opendatasoft platform.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_ods_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ODS page — get_ods_page","text":"","code":"get_ods_page(page_slug)"},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_ods_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ODS page — get_ods_page","text":"page_slug Slug page (backoffice platform -> Pages -> New existing page -> Properties -> Page URL).","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_ods_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ODS page — get_ods_page","text":"list object containing information page (title, description, tags...).","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/get_ods_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ODS page — get_ods_page","text":"","code":"if (FALSE) { page_slug <- \"odsrmd-example\"  page_elements <- get_ods_page(page_slug)  }"},{"path":"https://opendatasoft.github.io/odsrmd/reference/is_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check language availability — is_available","title":"Check language availability — is_available","text":"Check given language available ODS platform list languages contained page_elements.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/is_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check language availability — is_available","text":"","code":"is_available(language, page_elements)"},{"path":"https://opendatasoft.github.io/odsrmd/reference/is_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check language availability — is_available","text":"language Character string. page_elements List object get_page(). Contains title, description, template, language, content, tags level restriction page.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/is_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check language availability — is_available","text":"","code":"# Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/page_elements_example\", package = \"odsrmd\"), to = dir_tmp) #> [1] TRUE page_elements <- readRDS(paste0(dir_tmp, \"/page_elements_example\"))  is_available(\"EN\", page_elements)"},{"path":"https://opendatasoft.github.io/odsrmd/reference/put_ods_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Put ODS page — put_ods_page","title":"Put ODS page — put_ods_page","text":"Send JSON element page Opendatasoft platform.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/put_ods_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put ODS page — put_ods_page","text":"","code":"put_ods_page(page_slug, json_to_send)"},{"path":"https://opendatasoft.github.io/odsrmd/reference/put_ods_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put ODS page — put_ods_page","text":"page_slug Slug page (backoffice platform -> Pages -> New existing page -> Properties -> Page URL). json_to_send JSON object containing page information, title, description, content tags, put_ods_page() sends page corresponding page slug.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/put_ods_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put ODS page — put_ods_page","text":"request successful (.e. request successfully performed response HTTP status code <400 received), HTTP response; otherwise throws error.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/put_ods_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put ODS page — put_ods_page","text":"","code":"if (FALSE) { # Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to=dir_tmp) file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) # browseURL(dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\") page_slug <- \"odsrmd-example\"  body_and_style <- get_body_and_style(path)  page_elements <- get_ods_page(page_slug)  json_to_send <- create_json(page_elements, body_and_style, chosen_languages = c(\"en\", \"fr\"),                          title = \"English title\", description = NULL,                           tags = NULL, restricted = NULL)  put_ods_page(page_slug, json_to_send) }"},{"path":"https://opendatasoft.github.io/odsrmd/reference/update_ods_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an ODS page with the content of an Rmd file — update_ods_page","title":"Update an ODS page with the content of an Rmd file — update_ods_page","text":"--one function fill update ODS page content Rmarkdown file.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/update_ods_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an ODS page with the content of an Rmd file — update_ods_page","text":"","code":"update_ods_page(   path,   page_slug,   add_extra_css = \"no\",   chosen_languages = \"all\",   title = NULL,   description = NULL,   tags = NULL,   restricted = NULL )"},{"path":"https://opendatasoft.github.io/odsrmd/reference/update_ods_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an ODS page with the content of an Rmd file — update_ods_page","text":"path Path Rmd file. page_slug Slug page (backoffice platform -> Pages -> New existing page -> Properties -> Page URL). add_extra_css Add css files listed Rmarkdown yaml (output: html_document: css: ...). Default \"\" add extra css files. option \"append\" adds content css file(s) default Rmd style. option \"replace\" replaces default Rmd style content css file(s). chosen_languages character vector languages page updated. Default \"\", meaning languages available platform. title character string specifying title page. null, overwrites title page_elements. description character string containing description page. null, overwrites description page_elements. tags list object character strings containing tags describing page. null, overwrites tags page_elements. restricted logical TRUE/FALSE indicating reading status page. TRUE make page \"public\" whereas FALSE keep access restricted users granted permission. null, overwrites reading status page_elements.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/update_ods_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an ODS page with the content of an Rmd file — update_ods_page","text":"request successful (.e. request successfully performed response HTTP status code <400 received), HTTP response; otherwise throws error.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/reference/update_ods_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an ODS page with the content of an Rmd file — update_ods_page","text":"","code":"if (FALSE) { # Temporary directory for reproducible example dir_tmp <- tempfile(pattern = \"proj-\") dir.create(dir_tmp)  file.copy(from = system.file(\"examples/example_rmd.Rmd\", package = \"odsrmd\"), to = dir_tmp) file.copy(from = system.file(\"examples/style.css\", package = \"odsrmd\"), to=dir_tmp) # browseURL(dir_tmp) path <- paste0(dir_tmp, \"/example_rmd.Rmd\") page_slug <- \"odsrmd-example\"  update_ods_page(path, page_slug, add_extra_css = \"no\", chosen_languages = \"all\", title = NULL,   description = NULL, tags = NULL, restricted = NULL ) }"},{"path":[]},{"path":"https://opendatasoft.github.io/odsrmd/news/index.html","id":"enhancements-0-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"odsrmd 0.1.0","text":"get_body_and_style() now handles css files mentioned Rmarkdown yaml header. create_json() now handles several languages. default, chosen_language parameter set “”, meaning language versions page updated create_json().","code":""},{"path":"https://opendatasoft.github.io/odsrmd/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"odsrmd 0.1.0","text":"new function called update_ods_page() combines steps knitting Rmarkdown document html document, preparing html css elements, sending OpenDataSoft platform. gives opportunity perform whole process one command.","code":""},{"path":"https://opendatasoft.github.io/odsrmd/news/index.html","id":"odsrmd-0009000","dir":"Changelog","previous_headings":"","what":"odsrmd 0.0.0.9000","title":"odsrmd 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
